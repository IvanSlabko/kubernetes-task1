apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: k8s-post-service-db-deployment
  namespace: task2-post-service
  labels:
    app: k8s-post-service-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-post-service-db
  template:
    metadata:
      labels:
        app: k8s-post-service-db
    spec:
      containers:
      - name: k8s-post-service-db
        image: mysql/mysql-server:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: post-service-db-secret
              key: post-service-db-username
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: post-service-db-secret
              key: post-service-db-password
  volumeClaimTemplates:
    - metadata:
        name: post-service-volume-claim
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: hostPath
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: post-service-db
  namespace: task2-post-service
spec:
  selector:
    app: k8s-post-service-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: post-service-db-volume
#spec:
#  capacity:
#    storage: 2Gi
#  volumeMode: Filesystem
#  accessModes:
#    - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Delete
#  storageClassName: local-storage
#  local:
#    path: /postservice
#  nodeAffinity:
#    required:
#      nodeSelectorTerms:
#        - matchExpressions:
#            - key: kubernetes.io/hostname
#              operator: In
#              values:
#                - example-node