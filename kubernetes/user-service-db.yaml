apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: k8s-user-service-db-deployment
  namespace: task2-user-service
  labels:
    app: k8s-user-service-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-user-service-db
  template:
    metadata:
      labels:
        app: k8s-user-service-db
    spec:
      containers:
        - name: k8s-user-service-db
          image: mysql/mysql-server:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-service-db-secret
                  key: user-service-db-username
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-db-secret
                  key: user-service-db-password
  volumeClaimTemplates:
    - metadata:
        name: user-service-volume-claim
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: hostPath
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-db
  namespace: task2-user-service
spec:
  selector:
    app: k8s-user-service-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: user-service-db-volume
#spec:
#  capacity:
#    storage: 2Gi
#  volumeMode: Filesystem
#  accessModes:
#  - ReadWriteOnce
#  persistentVolumeReclaimPolicy: Delete
#  storageClassName: local-storage
#  local:
#    path: /userservice
#  nodeAffinity:
#    required:
#      nodeSelectorTerms:
#      - matchExpressions:
#        - key: kubernetes.io/hostname
#          operator: In
#          values:
#          - example-node